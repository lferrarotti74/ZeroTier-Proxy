name: Build release image

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'information'
        type: choice
        options:
          - information
          - debug
          - warning
          - critical
      tags:
        description: 'Purpose of Run This Workflow?'
        required: true
        type: string
  push:
    branches:
      - "main"
    paths-ignore:
      - 'README.md'
      - 'LICENSE'

env:
  REGISTRY_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/zerotier-proxy

jobs:
  print-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Print the purpose of run
        run: |
          echo "Purpose of Run: ${{ inputs.tags }}"
        
  build:
    runs-on: ubuntu-latest
    # Since your original workflow only uses linux/amd64, I've simplified the matrix
    # If you want to add more architectures in the future, you can expand this
    strategy:
      matrix:
        platform: [
          {name: "linux/amd64", tag: "amd64"}
        ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set Environment
        uses: c-py/action-dotenv-to-setenv@v5
        id: source-env
        with:
          env-file: env/.env
          
      - name: Echo Zerotier Proxy Version from env file
        run: | 
          echo ${{ steps.source-env.outputs.zerotierproxy_version }} >> "$GITHUB_ENV"
        
      - name: Prepare
        run: |
          platform=${{ matrix.platform.name }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> "$GITHUB_ENV"
        
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ env.ZEROTIERPROXY_VERSION }}
   
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Set up QEMU for Multi-Arch Builds
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ matrix.platform.name }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{ matrix.platform.name }}
          build-args: VERSION=${{ env.ZEROTIERPROXY_VERSION }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: mode=max
          sbom: true
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY_IMAGE }}:${{ env.ZEROTIERPROXY_VERSION }}
            ${{ env.REGISTRY_IMAGE }}:latest